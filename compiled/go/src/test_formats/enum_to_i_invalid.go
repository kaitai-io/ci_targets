// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package test_formats

import (
	"github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"
	"strconv"
)


type EnumToIInvalid_Animal int
const (
	EnumToIInvalid_Animal__Dog EnumToIInvalid_Animal = 102
	EnumToIInvalid_Animal__Cat EnumToIInvalid_Animal = 124
)
type EnumToIInvalid struct {
	Pet1 EnumToIInvalid_Animal
	Pet2 EnumToIInvalid_Animal
	_io *kaitai.Stream
	_root *EnumToIInvalid
	_parent interface{}
	_f_oneLtTwo bool
	oneLtTwo bool
	_f_pet2EqIntF bool
	pet2EqIntF bool
	_f_pet2EqIntT bool
	pet2EqIntT bool
	_f_pet2I bool
	pet2I int
	_f_pet2IToS bool
	pet2IToS string
	_f_pet2Mod bool
	pet2Mod int
}
func NewEnumToIInvalid() *EnumToIInvalid {
	return &EnumToIInvalid{
	}
}

func (this *EnumToIInvalid) Read(io *kaitai.Stream, parent interface{}, root *EnumToIInvalid) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp1, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Pet1 = EnumToIInvalid_Animal(tmp1)
	tmp2, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Pet2 = EnumToIInvalid_Animal(tmp2)
	return err
}
func (this *EnumToIInvalid) OneLtTwo() (v bool, err error) {
	if (this._f_oneLtTwo) {
		return this.oneLtTwo, nil
	}
	this.oneLtTwo = bool(this.Pet1 < this.Pet2)
	this._f_oneLtTwo = true
	return this.oneLtTwo, nil
}
func (this *EnumToIInvalid) Pet2EqIntF() (v bool, err error) {
	if (this._f_pet2EqIntF) {
		return this.pet2EqIntF, nil
	}
	this.pet2EqIntF = bool(this.Pet2 == 110)
	this._f_pet2EqIntF = true
	return this.pet2EqIntF, nil
}
func (this *EnumToIInvalid) Pet2EqIntT() (v bool, err error) {
	if (this._f_pet2EqIntT) {
		return this.pet2EqIntT, nil
	}
	this.pet2EqIntT = bool(this.Pet2 == 111)
	this._f_pet2EqIntT = true
	return this.pet2EqIntT, nil
}
func (this *EnumToIInvalid) Pet2I() (v int, err error) {
	if (this._f_pet2I) {
		return this.pet2I, nil
	}
	this.pet2I = int(this.Pet2)
	this._f_pet2I = true
	return this.pet2I, nil
}
func (this *EnumToIInvalid) Pet2IToS() (v string, err error) {
	if (this._f_pet2IToS) {
		return this.pet2IToS, nil
	}
	this.pet2IToS = string(strconv.Itoa(int64(this.Pet2)))
	this._f_pet2IToS = true
	return this.pet2IToS, nil
}
func (this *EnumToIInvalid) Pet2Mod() (v int, err error) {
	if (this._f_pet2Mod) {
		return this.pet2Mod, nil
	}
	this.pet2Mod = int((this.Pet2 + 32768))
	this._f_pet2Mod = true
	return this.pet2Mod, nil
}
