// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package test_formats

import "github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"

type ExprIoPosBits struct {
	Foo uint64
	Bar uint64
	Baz bool
	Qux uint64
	_io *kaitai.Stream
	_root *ExprIoPosBits
	_parent kaitai.Struct
}
func NewExprIoPosBits() *ExprIoPosBits {
	return &ExprIoPosBits{
	}
}

func (this ExprIoPosBits) IO_() *kaitai.Stream {
	return this._io
}

func (this *ExprIoPosBits) Read(io *kaitai.Stream, parent kaitai.Struct, root *ExprIoPosBits) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp1, err := this._io.ReadBitsIntBe(3)
	if err != nil {
		return err
	}
	this.Foo = tmp1
	tmp2, err := this._io.Pos()
	if err != nil {
		return err
	}
	if (tmp2 == 1) {
		tmp3, err := this._io.ReadBitsIntBe(5)
		if err != nil {
			return err
		}
		this.Bar = tmp3
	}
	tmp4, err := this._io.Pos()
	if err != nil {
		return err
	}
	if (tmp4 == 1) {
		tmp5, err := this._io.ReadBitsIntBe(1)
		if err != nil {
			return err
		}
		this.Baz = tmp5 != 0
	}
	tmp6, err := this._io.Pos()
	if err != nil {
		return err
	}
	if (tmp6 == 2) {
		tmp7, err := this._io.ReadBitsIntBe(7)
		if err != nil {
			return err
		}
		this.Qux = tmp7
	}
	return err
}
