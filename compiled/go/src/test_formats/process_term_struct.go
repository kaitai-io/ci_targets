// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package test_formats

import (
	"github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"
	"bytes"
)

type ProcessTermStruct struct {
	S1 *ProcessTermStruct_BytesWrapper
	S2 *ProcessTermStruct_BytesWrapper
	S3 *ProcessTermStruct_BytesWrapper
	_io *kaitai.Stream
	_root *ProcessTermStruct
	_parent kaitai.Struct
	_raw_S1 []byte
	_raw__raw_S1 []byte
	_raw_S2 []byte
	_raw__raw_S2 []byte
	_raw_S3 []byte
	_raw__raw_S3 []byte
}
func NewProcessTermStruct() *ProcessTermStruct {
	return &ProcessTermStruct{
	}
}

func (this ProcessTermStruct) IO_() *kaitai.Stream {
	return this._io
}

func (this *ProcessTermStruct) Read(io *kaitai.Stream, parent kaitai.Struct, root *ProcessTermStruct) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp1, err := this._io.ReadBytesTerm(124, false, true, true)
	if err != nil {
		return err
	}
	this._raw__raw_S1 = tmp1
	this._raw_S1 = this._raw__raw_S1
	_io__raw_S1 := kaitai.NewStream(bytes.NewReader(this._raw_S1))
	tmp2 := NewProcessTermStruct_BytesWrapper()
	err = tmp2.Read(_io__raw_S1, this, this._root)
	if err != nil {
		return err
	}
	this.S1 = tmp2
	tmp3, err := this._io.ReadBytesTerm(124, false, false, true)
	if err != nil {
		return err
	}
	this._raw__raw_S2 = tmp3
	this._raw_S2 = this._raw__raw_S2
	_io__raw_S2 := kaitai.NewStream(bytes.NewReader(this._raw_S2))
	tmp4 := NewProcessTermStruct_BytesWrapper()
	err = tmp4.Read(_io__raw_S2, this, this._root)
	if err != nil {
		return err
	}
	this.S2 = tmp4
	tmp5, err := this._io.ReadBytesTerm(64, true, true, true)
	if err != nil {
		return err
	}
	this._raw__raw_S3 = tmp5
	this._raw_S3 = this._raw__raw_S3
	_io__raw_S3 := kaitai.NewStream(bytes.NewReader(this._raw_S3))
	tmp6 := NewProcessTermStruct_BytesWrapper()
	err = tmp6.Read(_io__raw_S3, this, this._root)
	if err != nil {
		return err
	}
	this.S3 = tmp6
	return err
}
type ProcessTermStruct_BytesWrapper struct {
	Value []byte
	_io *kaitai.Stream
	_root *ProcessTermStruct
	_parent *ProcessTermStruct
}
func NewProcessTermStruct_BytesWrapper() *ProcessTermStruct_BytesWrapper {
	return &ProcessTermStruct_BytesWrapper{
	}
}

func (this ProcessTermStruct_BytesWrapper) IO_() *kaitai.Stream {
	return this._io
}

func (this *ProcessTermStruct_BytesWrapper) Read(io *kaitai.Stream, parent *ProcessTermStruct, root *ProcessTermStruct) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp7, err := this._io.ReadBytesFull()
	if err != nil {
		return err
	}
	tmp7 = tmp7
	this.Value = tmp7
	return err
}
