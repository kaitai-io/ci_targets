// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package test_formats

import "github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"


type ValidFailInEnum_Animal int
const (
	ValidFailInEnum_Animal__Dog ValidFailInEnum_Animal = 4
	ValidFailInEnum_Animal__Chicken ValidFailInEnum_Animal = 12
)
var values_ValidFailInEnum_Animal = map[ValidFailInEnum_Animal]struct{}{4: {}, 12: {}}
func (v ValidFailInEnum_Animal) isDefined() bool {
	_, ok := values_ValidFailInEnum_Animal[v]
	return ok
}
type ValidFailInEnum struct {
	Foo ValidFailInEnum_Animal
	_io *kaitai.Stream
	_root *ValidFailInEnum
	_parent kaitai.Struct
}
func NewValidFailInEnum() *ValidFailInEnum {
	return &ValidFailInEnum{
	}
}

func (this ValidFailInEnum) IO_() *kaitai.Stream {
	return this._io
}

func (this *ValidFailInEnum) Read(io *kaitai.Stream, parent kaitai.Struct, root *ValidFailInEnum) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp1, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.Foo = ValidFailInEnum_Animal(tmp1)
	if !this.Foo.isDefined() {
		return kaitai.NewValidationNotInEnumError(this.Foo, this._io, "/seq/0")
	}
	return err
}
