// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package test_formats

import (
	"github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"
	"io"
	"bytes"
)

type IoLocalVar struct {
	Skip []byte
	AlwaysNull uint8
	Followup uint8
	_io *kaitai.Stream
	_root *IoLocalVar
	_parent kaitai.Struct
	_raw_messUp []byte
	_f_messUp bool
	messUp interface{}
}
func NewIoLocalVar() *IoLocalVar {
	return &IoLocalVar{
	}
}

func (this IoLocalVar) IO_() *kaitai.Stream {
	return this._io
}

func (this *IoLocalVar) Read(io *kaitai.Stream, parent kaitai.Struct, root *IoLocalVar) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp1, err := this._io.ReadBytes(int(20))
	if err != nil {
		return err
	}
	tmp1 = tmp1
	this.Skip = tmp1
	tmp2, err := this.MessUp()
	if err != nil {
		return err
	}
	tmp3, err := tmp2.(*IoLocalVar_Dummy)._io.Pos()
	if err != nil {
		return err
	}
	if (tmp3 < 0) {
		tmp4, err := this._io.ReadU1()
		if err != nil {
			return err
		}
		this.AlwaysNull = tmp4
	}
	tmp5, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Followup = tmp5
	return err
}
func (this *IoLocalVar) MessUp() (v interface{}, err error) {
	if (this._f_messUp) {
		return this.messUp, nil
	}
	this._f_messUp = true
	thisIo := this._root._io
	_pos, err := thisIo.Pos()
	if err != nil {
		return nil, err
	}
	_, err = thisIo.Seek(int64(8), io.SeekStart)
	if err != nil {
		return nil, err
	}
	switch (2) {
	case 1:
		tmp6, err := thisIo.ReadBytes(int(2))
		if err != nil {
			return nil, err
		}
		tmp6 = tmp6
		this._raw_messUp = tmp6
		_io__raw_messUp := kaitai.NewStream(bytes.NewReader(this._raw_messUp))
		tmp7 := NewIoLocalVar_Dummy()
		err = tmp7.Read(_io__raw_messUp, this, this._root)
		if err != nil {
			return nil, err
		}
		this.messUp = tmp7
	case 2:
		tmp8, err := thisIo.ReadBytes(int(2))
		if err != nil {
			return nil, err
		}
		tmp8 = tmp8
		this._raw_messUp = tmp8
		_io__raw_messUp := kaitai.NewStream(bytes.NewReader(this._raw_messUp))
		tmp9 := NewIoLocalVar_Dummy()
		err = tmp9.Read(_io__raw_messUp, this, this._root)
		if err != nil {
			return nil, err
		}
		this.messUp = tmp9
	default:
		tmp10, err := thisIo.ReadBytes(int(2))
		if err != nil {
			return nil, err
		}
		tmp10 = tmp10
		this._raw_messUp = tmp10
	}
	_, err = thisIo.Seek(_pos, io.SeekStart)
	if err != nil {
		return nil, err
	}
	return this.messUp, nil
}
type IoLocalVar_Dummy struct {
	_io *kaitai.Stream
	_root *IoLocalVar
	_parent *IoLocalVar
}
func NewIoLocalVar_Dummy() *IoLocalVar_Dummy {
	return &IoLocalVar_Dummy{
	}
}

func (this IoLocalVar_Dummy) IO_() *kaitai.Stream {
	return this._io
}

func (this *IoLocalVar_Dummy) Read(io *kaitai.Stream, parent *IoLocalVar, root *IoLocalVar) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	return err
}
