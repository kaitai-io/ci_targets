// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package test_formats

import (
	"github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"
	"bytes"
)

type ExprIoPos struct {
	Substream1 *ExprIoPos_AllPlusNumber
	Substream2 *ExprIoPos_AllPlusNumber
	_io *kaitai.Stream
	_root *ExprIoPos
	_parent kaitai.Struct
	_raw_Substream1 []byte
	_raw_Substream2 []byte
}
func NewExprIoPos() *ExprIoPos {
	return &ExprIoPos{
	}
}

func (this ExprIoPos) IO_() *kaitai.Stream {
	return this._io
}

func (this *ExprIoPos) Read(io *kaitai.Stream, parent kaitai.Struct, root *ExprIoPos) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp1, err := this._io.ReadBytes(int(16))
	if err != nil {
		return err
	}
	tmp1 = tmp1
	this._raw_Substream1 = tmp1
	_io__raw_Substream1 := kaitai.NewStream(bytes.NewReader(this._raw_Substream1))
	tmp2 := NewExprIoPos_AllPlusNumber()
	err = tmp2.Read(_io__raw_Substream1, this, this._root)
	if err != nil {
		return err
	}
	this.Substream1 = tmp2
	tmp3, err := this._io.ReadBytes(int(14))
	if err != nil {
		return err
	}
	tmp3 = tmp3
	this._raw_Substream2 = tmp3
	_io__raw_Substream2 := kaitai.NewStream(bytes.NewReader(this._raw_Substream2))
	tmp4 := NewExprIoPos_AllPlusNumber()
	err = tmp4.Read(_io__raw_Substream2, this, this._root)
	if err != nil {
		return err
	}
	this.Substream2 = tmp4
	return err
}
type ExprIoPos_AllPlusNumber struct {
	MyStr string
	Body []byte
	Number uint16
	_io *kaitai.Stream
	_root *ExprIoPos
	_parent *ExprIoPos
}
func NewExprIoPos_AllPlusNumber() *ExprIoPos_AllPlusNumber {
	return &ExprIoPos_AllPlusNumber{
	}
}

func (this ExprIoPos_AllPlusNumber) IO_() *kaitai.Stream {
	return this._io
}

func (this *ExprIoPos_AllPlusNumber) Read(io *kaitai.Stream, parent *ExprIoPos, root *ExprIoPos) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp5, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.MyStr = string(tmp5)
	tmp6, err := this._io.Size()
	if err != nil {
		return err
	}
	tmp7, err := this._io.Pos()
	if err != nil {
		return err
	}
	tmp8, err := this._io.ReadBytes(int((tmp6 - tmp7) - 2))
	if err != nil {
		return err
	}
	tmp8 = tmp8
	this.Body = tmp8
	tmp9, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.Number = uint16(tmp9)
	return err
}
