// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package test_formats

import (
	"github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"
	"bytes"
)

type RepeatNTermStruct struct {
	Records1 []*RepeatNTermStruct_BytesWrapper
	Records2 []*RepeatNTermStruct_BytesWrapper
	Records3 []*RepeatNTermStruct_BytesWrapper
	_io *kaitai.Stream
	_root *RepeatNTermStruct
	_parent kaitai.Struct
	_raw_Records1 [][]byte
	_raw_Records2 [][]byte
	_raw_Records3 [][]byte
}
func NewRepeatNTermStruct() *RepeatNTermStruct {
	return &RepeatNTermStruct{
	}
}

func (this RepeatNTermStruct) IO_() *kaitai.Stream {
	return this._io
}

func (this *RepeatNTermStruct) Read(io *kaitai.Stream, parent kaitai.Struct, root *RepeatNTermStruct) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	for i := 0; i < int(2); i++ {
		_ = i
		tmp1, err := this._io.ReadBytesTerm(170, false, true, true)
		if err != nil {
			return err
		}
		this._raw_Records1 = append(this._raw_Records1, tmp1)
		_io__raw_Records1 := kaitai.NewStream(bytes.NewReader(this._raw_Records1[i]))
		tmp2 := NewRepeatNTermStruct_BytesWrapper()
		err = tmp2.Read(_io__raw_Records1, this, this._root)
		if err != nil {
			return err
		}
		this.Records1 = append(this.Records1, tmp2)
	}
	for i := 0; i < int(2); i++ {
		_ = i
		tmp3, err := this._io.ReadBytesTerm(170, true, true, true)
		if err != nil {
			return err
		}
		this._raw_Records2 = append(this._raw_Records2, tmp3)
		_io__raw_Records2 := kaitai.NewStream(bytes.NewReader(this._raw_Records2[i]))
		tmp4 := NewRepeatNTermStruct_BytesWrapper()
		err = tmp4.Read(_io__raw_Records2, this, this._root)
		if err != nil {
			return err
		}
		this.Records2 = append(this.Records2, tmp4)
	}
	for i := 0; i < int(2); i++ {
		_ = i
		tmp5, err := this._io.ReadBytesTerm(85, false, false, true)
		if err != nil {
			return err
		}
		this._raw_Records3 = append(this._raw_Records3, tmp5)
		_io__raw_Records3 := kaitai.NewStream(bytes.NewReader(this._raw_Records3[i]))
		tmp6 := NewRepeatNTermStruct_BytesWrapper()
		err = tmp6.Read(_io__raw_Records3, this, this._root)
		if err != nil {
			return err
		}
		this.Records3 = append(this.Records3, tmp6)
	}
	return err
}
type RepeatNTermStruct_BytesWrapper struct {
	Value []byte
	_io *kaitai.Stream
	_root *RepeatNTermStruct
	_parent *RepeatNTermStruct
}
func NewRepeatNTermStruct_BytesWrapper() *RepeatNTermStruct_BytesWrapper {
	return &RepeatNTermStruct_BytesWrapper{
	}
}

func (this RepeatNTermStruct_BytesWrapper) IO_() *kaitai.Stream {
	return this._io
}

func (this *RepeatNTermStruct_BytesWrapper) Read(io *kaitai.Stream, parent *RepeatNTermStruct, root *RepeatNTermStruct) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp7, err := this._io.ReadBytesFull()
	if err != nil {
		return err
	}
	tmp7 = tmp7
	this.Value = tmp7
	return err
}
