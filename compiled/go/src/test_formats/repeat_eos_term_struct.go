// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package test_formats

import (
	"github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"
	"bytes"
)

type RepeatEosTermStruct struct {
	Records []*RepeatEosTermStruct_BytesWrapper
	_io *kaitai.Stream
	_root *RepeatEosTermStruct
	_parent kaitai.Struct
	_raw_Records [][]byte
}
func NewRepeatEosTermStruct() *RepeatEosTermStruct {
	return &RepeatEosTermStruct{
	}
}

func (this RepeatEosTermStruct) IO_() *kaitai.Stream {
	return this._io
}

func (this *RepeatEosTermStruct) Read(io *kaitai.Stream, parent kaitai.Struct, root *RepeatEosTermStruct) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	for i := 0;; i++ {
		tmp1, err := this._io.EOF()
		if err != nil {
			return err
		}
		if tmp1 {
			break
		}
		tmp2, err := this._io.ReadBytesTerm(178, true, true, true)
		if err != nil {
			return err
		}
		this._raw_Records = append(this._raw_Records, tmp2)
		_io__raw_Records := kaitai.NewStream(bytes.NewReader(this._raw_Records[len(this._raw_Records) - 1]))
		tmp3 := NewRepeatEosTermStruct_BytesWrapper()
		err = tmp3.Read(_io__raw_Records, this, this._root)
		if err != nil {
			return err
		}
		this.Records = append(this.Records, tmp3)
	}
	return err
}
type RepeatEosTermStruct_BytesWrapper struct {
	Value []byte
	_io *kaitai.Stream
	_root *RepeatEosTermStruct
	_parent *RepeatEosTermStruct
}
func NewRepeatEosTermStruct_BytesWrapper() *RepeatEosTermStruct_BytesWrapper {
	return &RepeatEosTermStruct_BytesWrapper{
	}
}

func (this RepeatEosTermStruct_BytesWrapper) IO_() *kaitai.Stream {
	return this._io
}

func (this *RepeatEosTermStruct_BytesWrapper) Read(io *kaitai.Stream, parent *RepeatEosTermStruct, root *RepeatEosTermStruct) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp4, err := this._io.ReadBytesFull()
	if err != nil {
		return err
	}
	tmp4 = tmp4
	this.Value = tmp4
	return err
}
