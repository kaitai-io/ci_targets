// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package test_formats

import "github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"

type StrPadTermRoundtrip struct {
	StrPad string
	StrTerm string
	StrTermAndPad string
	StrTermInclude string
	_io *kaitai.Stream
	_root *StrPadTermRoundtrip
	_parent kaitai.Struct
}
func NewStrPadTermRoundtrip() *StrPadTermRoundtrip {
	return &StrPadTermRoundtrip{
	}
}

func (this StrPadTermRoundtrip) IO_() *kaitai.Stream {
	return this._io
}

func (this *StrPadTermRoundtrip) Read(io *kaitai.Stream, parent kaitai.Struct, root *StrPadTermRoundtrip) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp1, err := this._io.ReadBytes(int(20))
	if err != nil {
		return err
	}
	tmp1 = kaitai.BytesStripRight(tmp1, 64)
	this.StrPad = string(tmp1)
	tmp2, err := this._io.ReadBytes(int(20))
	if err != nil {
		return err
	}
	tmp2 = kaitai.BytesTerminate(kaitai.BytesStripRight(tmp2, 43), 64, false)
	this.StrTerm = string(tmp2)
	tmp3, err := this._io.ReadBytes(int(20))
	if err != nil {
		return err
	}
	tmp3 = kaitai.BytesTerminate(kaitai.BytesStripRight(tmp3, 43), 64, false)
	this.StrTermAndPad = string(tmp3)
	tmp4, err := this._io.ReadBytes(int(20))
	if err != nil {
		return err
	}
	tmp4 = kaitai.BytesTerminate(kaitai.BytesStripRight(tmp4, 46), 64, true)
	this.StrTermInclude = string(tmp4)
	return err
}
