// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package test_formats

import "github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"

type ParamsPassArrayStruct struct {
	One *ParamsPassArrayStruct_Foo
	Two *ParamsPassArrayStruct_Bar
	PassStructs *ParamsPassArrayStruct_StructType
	_io *kaitai.Stream
	_root *ParamsPassArrayStruct
	_parent kaitai.Struct
	_f_oneTwo bool
	oneTwo []kaitai.Struct
}
func NewParamsPassArrayStruct() *ParamsPassArrayStruct {
	return &ParamsPassArrayStruct{
	}
}

func (this ParamsPassArrayStruct) IO_() *kaitai.Stream {
	return this._io
}

func (this *ParamsPassArrayStruct) Read(io *kaitai.Stream, parent kaitai.Struct, root *ParamsPassArrayStruct) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp1 := NewParamsPassArrayStruct_Foo()
	err = tmp1.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.One = tmp1
	tmp2 := NewParamsPassArrayStruct_Bar()
	err = tmp2.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Two = tmp2
	tmp3, err := this.OneTwo()
	if err != nil {
		return err
	}
	tmp4 := NewParamsPassArrayStruct_StructType(tmp3)
	err = tmp4.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.PassStructs = tmp4
	return err
}
func (this *ParamsPassArrayStruct) OneTwo() (v []kaitai.Struct, err error) {
	if (this._f_oneTwo) {
		return this.oneTwo, nil
	}
	this._f_oneTwo = true
	this.oneTwo = []kaitai.Struct([]kaitai.Struct{this.One, this.Two})
	return this.oneTwo, nil
}
type ParamsPassArrayStruct_Bar struct {
	B uint8
	_io *kaitai.Stream
	_root *ParamsPassArrayStruct
	_parent *ParamsPassArrayStruct
}
func NewParamsPassArrayStruct_Bar() *ParamsPassArrayStruct_Bar {
	return &ParamsPassArrayStruct_Bar{
	}
}

func (this ParamsPassArrayStruct_Bar) IO_() *kaitai.Stream {
	return this._io
}

func (this *ParamsPassArrayStruct_Bar) Read(io *kaitai.Stream, parent *ParamsPassArrayStruct, root *ParamsPassArrayStruct) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp5, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.B = tmp5
	return err
}
type ParamsPassArrayStruct_Foo struct {
	F uint8
	_io *kaitai.Stream
	_root *ParamsPassArrayStruct
	_parent *ParamsPassArrayStruct
}
func NewParamsPassArrayStruct_Foo() *ParamsPassArrayStruct_Foo {
	return &ParamsPassArrayStruct_Foo{
	}
}

func (this ParamsPassArrayStruct_Foo) IO_() *kaitai.Stream {
	return this._io
}

func (this *ParamsPassArrayStruct_Foo) Read(io *kaitai.Stream, parent *ParamsPassArrayStruct, root *ParamsPassArrayStruct) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp6, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.F = tmp6
	return err
}
type ParamsPassArrayStruct_StructType struct {
	Structs []kaitai.Struct
	_io *kaitai.Stream
	_root *ParamsPassArrayStruct
	_parent *ParamsPassArrayStruct
}
func NewParamsPassArrayStruct_StructType(structs []kaitai.Struct) *ParamsPassArrayStruct_StructType {
	return &ParamsPassArrayStruct_StructType{
		Structs: structs,
	}
}

func (this ParamsPassArrayStruct_StructType) IO_() *kaitai.Stream {
	return this._io
}

func (this *ParamsPassArrayStruct_StructType) Read(io *kaitai.Stream, parent *ParamsPassArrayStruct, root *ParamsPassArrayStruct) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	return err
}
