// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package test_formats

import "github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"

type BytesPadTermEqual struct {
	S1 []byte
	S2 []byte
	S3 []byte
	S4 []byte
	_io *kaitai.Stream
	_root *BytesPadTermEqual
	_parent kaitai.Struct
}
func NewBytesPadTermEqual() *BytesPadTermEqual {
	return &BytesPadTermEqual{
	}
}

func (this BytesPadTermEqual) IO_() *kaitai.Stream {
	return this._io
}

func (this *BytesPadTermEqual) Read(io *kaitai.Stream, parent kaitai.Struct, root *BytesPadTermEqual) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp1, err := this._io.ReadBytes(int(20))
	if err != nil {
		return err
	}
	tmp1 = kaitai.BytesTerminate(kaitai.BytesStripRight(tmp1, 64), 64, false)
	this.S1 = tmp1
	tmp2, err := this._io.ReadBytes(int(20))
	if err != nil {
		return err
	}
	tmp2 = kaitai.BytesTerminate(kaitai.BytesStripRight(tmp2, 43), 64, true)
	this.S2 = tmp2
	tmp3, err := this._io.ReadBytes(int(20))
	if err != nil {
		return err
	}
	tmp3 = kaitai.BytesTerminate(kaitai.BytesStripRight(tmp3, 43), 43, false)
	this.S3 = tmp3
	tmp4, err := this._io.ReadBytes(int(20))
	if err != nil {
		return err
	}
	tmp4 = kaitai.BytesTerminate(kaitai.BytesStripRight(tmp4, 46), 46, true)
	this.S4 = tmp4
	return err
}
