// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package test_formats

import "github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"

type DebugArrayUserCurrentExcluded struct {
	ArrayOfCats []*DebugArrayUserCurrentExcluded_Cat
	_io *kaitai.Stream
	_root *DebugArrayUserCurrentExcluded
	_parent kaitai.Struct
}
func NewDebugArrayUserCurrentExcluded() *DebugArrayUserCurrentExcluded {
	return &DebugArrayUserCurrentExcluded{
	}
}

func (this DebugArrayUserCurrentExcluded) IO_() *kaitai.Stream {
	return this._io
}

func (this *DebugArrayUserCurrentExcluded) Read(io *kaitai.Stream, parent kaitai.Struct, root *DebugArrayUserCurrentExcluded) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	for i := 0; i < int(3); i++ {
		_ = i
		tmp1 := NewDebugArrayUserCurrentExcluded_Cat()
		err = tmp1.Read(this._io, this, this._root)
		this.ArrayOfCats = append(this.ArrayOfCats, tmp1)
		if err != nil {
			return err
		}
	}
	return err
}
type DebugArrayUserCurrentExcluded_Cat struct {
	Meow []byte
	_io *kaitai.Stream
	_root *DebugArrayUserCurrentExcluded
	_parent *DebugArrayUserCurrentExcluded
}
func NewDebugArrayUserCurrentExcluded_Cat() *DebugArrayUserCurrentExcluded_Cat {
	return &DebugArrayUserCurrentExcluded_Cat{
	}
}

func (this DebugArrayUserCurrentExcluded_Cat) IO_() *kaitai.Stream {
	return this._io
}

func (this *DebugArrayUserCurrentExcluded_Cat) Read(io *kaitai.Stream, parent *DebugArrayUserCurrentExcluded, root *DebugArrayUserCurrentExcluded) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp2, err := this._io.ReadBytes(int(3 - len(this._parent.ArrayOfCats)))
	if err != nil {
		return err
	}
	tmp2 = tmp2
	this.Meow = tmp2
	return err
}
