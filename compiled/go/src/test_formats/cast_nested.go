// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package test_formats

import "github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"

type CastNested struct {
	Opcodes []*CastNested_Opcode
	_io *kaitai.Stream
	_root *CastNested
	_parent kaitai.Struct
	_f_opcodes0Str bool
	opcodes0Str *CastNested_Opcode_Strval
	_f_opcodes0StrValue bool
	opcodes0StrValue string
	_f_opcodes1Int bool
	opcodes1Int *CastNested_Opcode_Intval
	_f_opcodes1IntValue bool
	opcodes1IntValue uint8
}
func NewCastNested() *CastNested {
	return &CastNested{
	}
}

func (this CastNested) IO_() *kaitai.Stream {
	return this._io
}

func (this *CastNested) Read(io *kaitai.Stream, parent kaitai.Struct, root *CastNested) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	for i := 0;; i++ {
		tmp1, err := this._io.EOF()
		if err != nil {
			return err
		}
		if tmp1 {
			break
		}
		tmp2 := NewCastNested_Opcode()
		err = tmp2.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Opcodes = append(this.Opcodes, tmp2)
	}
	return err
}
func (this *CastNested) Opcodes0Str() (v *CastNested_Opcode_Strval, err error) {
	if (this._f_opcodes0Str) {
		return this.opcodes0Str, nil
	}
	this._f_opcodes0Str = true
	this.opcodes0Str = this.Opcodes[0].Body.(*CastNested_Opcode_Strval)
	return this.opcodes0Str, nil
}
func (this *CastNested) Opcodes0StrValue() (v string, err error) {
	if (this._f_opcodes0StrValue) {
		return this.opcodes0StrValue, nil
	}
	this._f_opcodes0StrValue = true
	this.opcodes0StrValue = string(this.Opcodes[0].Body.(*CastNested_Opcode_Strval).Value)
	return this.opcodes0StrValue, nil
}
func (this *CastNested) Opcodes1Int() (v *CastNested_Opcode_Intval, err error) {
	if (this._f_opcodes1Int) {
		return this.opcodes1Int, nil
	}
	this._f_opcodes1Int = true
	this.opcodes1Int = this.Opcodes[1].Body.(*CastNested_Opcode_Intval)
	return this.opcodes1Int, nil
}
func (this *CastNested) Opcodes1IntValue() (v uint8, err error) {
	if (this._f_opcodes1IntValue) {
		return this.opcodes1IntValue, nil
	}
	this._f_opcodes1IntValue = true
	this.opcodes1IntValue = uint8(this.Opcodes[1].Body.(*CastNested_Opcode_Intval).Value)
	return this.opcodes1IntValue, nil
}
type CastNested_Opcode struct {
	Code uint8
	Body kaitai.Struct
	_io *kaitai.Stream
	_root *CastNested
	_parent *CastNested
}
func NewCastNested_Opcode() *CastNested_Opcode {
	return &CastNested_Opcode{
	}
}

func (this CastNested_Opcode) IO_() *kaitai.Stream {
	return this._io
}

func (this *CastNested_Opcode) Read(io *kaitai.Stream, parent *CastNested, root *CastNested) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp3, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Code = tmp3
	switch (this.Code) {
	case 73:
		tmp4 := NewCastNested_Opcode_Intval()
		err = tmp4.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp4
	case 83:
		tmp5 := NewCastNested_Opcode_Strval()
		err = tmp5.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp5
	}
	return err
}
type CastNested_Opcode_Intval struct {
	Value uint8
	_io *kaitai.Stream
	_root *CastNested
	_parent *CastNested_Opcode
}
func NewCastNested_Opcode_Intval() *CastNested_Opcode_Intval {
	return &CastNested_Opcode_Intval{
	}
}

func (this CastNested_Opcode_Intval) IO_() *kaitai.Stream {
	return this._io
}

func (this *CastNested_Opcode_Intval) Read(io *kaitai.Stream, parent *CastNested_Opcode, root *CastNested) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp6, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Value = tmp6
	return err
}
type CastNested_Opcode_Strval struct {
	Value string
	_io *kaitai.Stream
	_root *CastNested
	_parent *CastNested_Opcode
}
func NewCastNested_Opcode_Strval() *CastNested_Opcode_Strval {
	return &CastNested_Opcode_Strval{
	}
}

func (this CastNested_Opcode_Strval) IO_() *kaitai.Stream {
	return this._io
}

func (this *CastNested_Opcode_Strval) Read(io *kaitai.Stream, parent *CastNested_Opcode, root *CastNested) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp7, err := this._io.ReadBytesTerm(0, false, true, true)
	if err != nil {
		return err
	}
	this.Value = string(tmp7)
	return err
}
