// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package test_formats

import "github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"

type IndexToParamUntil struct {
	Qty uint32
	Sizes []uint32
	Blocks []*IndexToParamUntil_Block
	_io *kaitai.Stream
	_root *IndexToParamUntil
	_parent kaitai.Struct
}
func NewIndexToParamUntil() *IndexToParamUntil {
	return &IndexToParamUntil{
	}
}

func (this IndexToParamUntil) IO_() *kaitai.Stream {
	return this._io
}

func (this *IndexToParamUntil) Read(io *kaitai.Stream, parent kaitai.Struct, root *IndexToParamUntil) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp1, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.Qty = uint32(tmp1)
	for i := 0; i < int(this.Qty); i++ {
		_ = i
		tmp2, err := this._io.ReadU4le()
		if err != nil {
			return err
		}
		this.Sizes = append(this.Sizes, tmp2)
	}
	for i := 1;; i++ {
		tmp3 := NewIndexToParamUntil_Block(i)
		err = tmp3.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		_it := tmp3
		this.Blocks = append(this.Blocks, _it)
		tmp4, err := this._io.EOF()
		if err != nil {
			return err
		}
		if tmp4 {
			break
		}
	}
	return err
}
type IndexToParamUntil_Block struct {
	Buf string
	Idx int32
	_io *kaitai.Stream
	_root *IndexToParamUntil
	_parent *IndexToParamUntil
}
func NewIndexToParamUntil_Block(idx int32) *IndexToParamUntil_Block {
	return &IndexToParamUntil_Block{
		Idx: idx,
	}
}

func (this IndexToParamUntil_Block) IO_() *kaitai.Stream {
	return this._io
}

func (this *IndexToParamUntil_Block) Read(io *kaitai.Stream, parent *IndexToParamUntil, root *IndexToParamUntil) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp5, err := this._io.ReadBytes(int(this._root.Sizes[this.Idx]))
	if err != nil {
		return err
	}
	tmp5 = tmp5
	this.Buf = string(tmp5)
	return err
}
