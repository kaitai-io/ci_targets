// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package test_formats

import (
	"github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"
	"bytes"
	"io"
)

type ProcessRepeatUsertypeDynargRotate struct {
	BlocksRol []*ProcessRepeatUsertypeDynargRotate_Block
	BlocksRor []*ProcessRepeatUsertypeDynargRotate_Block
	BlocksB *ProcessRepeatUsertypeDynargRotate_BlocksBWrapper
	_io *kaitai.Stream
	_root *ProcessRepeatUsertypeDynargRotate
	_parent kaitai.Struct
	_raw_BlocksRol [][]byte
	_raw__raw_BlocksRol [][]byte
	_raw_BlocksRor [][]byte
	_raw__raw_BlocksRor [][]byte
}
func NewProcessRepeatUsertypeDynargRotate() *ProcessRepeatUsertypeDynargRotate {
	return &ProcessRepeatUsertypeDynargRotate{
	}
}

func (this ProcessRepeatUsertypeDynargRotate) IO_() *kaitai.Stream {
	return this._io
}

func (this *ProcessRepeatUsertypeDynargRotate) Read(io *kaitai.Stream, parent kaitai.Struct, root *ProcessRepeatUsertypeDynargRotate) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	for i := 0; i < int(2); i++ {
		_ = i
		tmp1, err := this._io.ReadBytes(int(3))
		if err != nil {
			return err
		}
		tmp1 = tmp1
		this._raw__raw_BlocksRol = append(this._raw__raw_BlocksRol, tmp1)
		tmp2, err := this._io.Pos()
		if err != nil {
			return err
		}
		this._raw_BlocksRol = append(this._raw_BlocksRol, kaitai.ProcessRotateLeft(this._raw__raw_BlocksRol[i], int(tmp2 - 4 * i)))
		_io__raw_BlocksRol := kaitai.NewStream(bytes.NewReader(this._raw_BlocksRol[i]))
		tmp3 := NewProcessRepeatUsertypeDynargRotate_Block()
		err = tmp3.Read(_io__raw_BlocksRol, this, this._root)
		if err != nil {
			return err
		}
		this.BlocksRol = append(this.BlocksRol, tmp3)
	}
	for i := 0; i < int(3); i++ {
		_ = i
		tmp4, err := this._io.ReadBytes(int(3))
		if err != nil {
			return err
		}
		tmp4 = tmp4
		this._raw__raw_BlocksRor = append(this._raw__raw_BlocksRor, tmp4)
		tmp5, err := this._io.Pos()
		if err != nil {
			return err
		}
		this._raw_BlocksRor = append(this._raw_BlocksRor, kaitai.ProcessRotateLeft(this._raw__raw_BlocksRor[i], int(8 - ((tmp5 - 6) - 4 * i))))
		_io__raw_BlocksRor := kaitai.NewStream(bytes.NewReader(this._raw_BlocksRor[i]))
		tmp6 := NewProcessRepeatUsertypeDynargRotate_Block()
		err = tmp6.Read(_io__raw_BlocksRor, this, this._root)
		if err != nil {
			return err
		}
		this.BlocksRor = append(this.BlocksRor, tmp6)
	}
	tmp7 := NewProcessRepeatUsertypeDynargRotate_BlocksBWrapper()
	err = tmp7.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.BlocksB = tmp7
	return err
}
type ProcessRepeatUsertypeDynargRotate_Block struct {
	A uint16
	_io *kaitai.Stream
	_root *ProcessRepeatUsertypeDynargRotate
	_parent *ProcessRepeatUsertypeDynargRotate
}
func NewProcessRepeatUsertypeDynargRotate_Block() *ProcessRepeatUsertypeDynargRotate_Block {
	return &ProcessRepeatUsertypeDynargRotate_Block{
	}
}

func (this ProcessRepeatUsertypeDynargRotate_Block) IO_() *kaitai.Stream {
	return this._io
}

func (this *ProcessRepeatUsertypeDynargRotate_Block) Read(io *kaitai.Stream, parent *ProcessRepeatUsertypeDynargRotate, root *ProcessRepeatUsertypeDynargRotate) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp8, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.A = uint16(tmp8)
	return err
}
type ProcessRepeatUsertypeDynargRotate_BlocksBWrapper struct {
	Dummy uint8
	_io *kaitai.Stream
	_root *ProcessRepeatUsertypeDynargRotate
	_parent *ProcessRepeatUsertypeDynargRotate
	_f_blocksRol0B bool
	blocksRol0B uint8
	_f_blocksRol1B bool
	blocksRol1B uint8
	_f_blocksRor0B bool
	blocksRor0B uint8
	_f_blocksRor1B bool
	blocksRor1B uint8
	_f_blocksRor2B bool
	blocksRor2B uint8
}
func NewProcessRepeatUsertypeDynargRotate_BlocksBWrapper() *ProcessRepeatUsertypeDynargRotate_BlocksBWrapper {
	return &ProcessRepeatUsertypeDynargRotate_BlocksBWrapper{
	}
}

func (this ProcessRepeatUsertypeDynargRotate_BlocksBWrapper) IO_() *kaitai.Stream {
	return this._io
}

func (this *ProcessRepeatUsertypeDynargRotate_BlocksBWrapper) Read(io *kaitai.Stream, parent *ProcessRepeatUsertypeDynargRotate, root *ProcessRepeatUsertypeDynargRotate) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp9, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Dummy = tmp9
	return err
}
func (this *ProcessRepeatUsertypeDynargRotate_BlocksBWrapper) BlocksRol0B() (v uint8, err error) {
	if (this._f_blocksRol0B) {
		return this.blocksRol0B, nil
	}
	this._f_blocksRol0B = true
	thisIo := this._parent.BlocksRol[0]._io
	_pos, err := thisIo.Pos()
	if err != nil {
		return 0, err
	}
	_, err = thisIo.Seek(int64(2), io.SeekStart)
	if err != nil {
		return 0, err
	}
	tmp10, err := thisIo.ReadU1()
	if err != nil {
		return 0, err
	}
	this.blocksRol0B = tmp10
	_, err = thisIo.Seek(_pos, io.SeekStart)
	if err != nil {
		return 0, err
	}
	return this.blocksRol0B, nil
}
func (this *ProcessRepeatUsertypeDynargRotate_BlocksBWrapper) BlocksRol1B() (v uint8, err error) {
	if (this._f_blocksRol1B) {
		return this.blocksRol1B, nil
	}
	this._f_blocksRol1B = true
	thisIo := this._parent.BlocksRol[1]._io
	_pos, err := thisIo.Pos()
	if err != nil {
		return 0, err
	}
	_, err = thisIo.Seek(int64(2), io.SeekStart)
	if err != nil {
		return 0, err
	}
	tmp11, err := thisIo.ReadU1()
	if err != nil {
		return 0, err
	}
	this.blocksRol1B = tmp11
	_, err = thisIo.Seek(_pos, io.SeekStart)
	if err != nil {
		return 0, err
	}
	return this.blocksRol1B, nil
}
func (this *ProcessRepeatUsertypeDynargRotate_BlocksBWrapper) BlocksRor0B() (v uint8, err error) {
	if (this._f_blocksRor0B) {
		return this.blocksRor0B, nil
	}
	this._f_blocksRor0B = true
	thisIo := this._parent.BlocksRor[0]._io
	_pos, err := thisIo.Pos()
	if err != nil {
		return 0, err
	}
	_, err = thisIo.Seek(int64(2), io.SeekStart)
	if err != nil {
		return 0, err
	}
	tmp12, err := thisIo.ReadU1()
	if err != nil {
		return 0, err
	}
	this.blocksRor0B = tmp12
	_, err = thisIo.Seek(_pos, io.SeekStart)
	if err != nil {
		return 0, err
	}
	return this.blocksRor0B, nil
}
func (this *ProcessRepeatUsertypeDynargRotate_BlocksBWrapper) BlocksRor1B() (v uint8, err error) {
	if (this._f_blocksRor1B) {
		return this.blocksRor1B, nil
	}
	this._f_blocksRor1B = true
	thisIo := this._parent.BlocksRor[1]._io
	_pos, err := thisIo.Pos()
	if err != nil {
		return 0, err
	}
	_, err = thisIo.Seek(int64(2), io.SeekStart)
	if err != nil {
		return 0, err
	}
	tmp13, err := thisIo.ReadU1()
	if err != nil {
		return 0, err
	}
	this.blocksRor1B = tmp13
	_, err = thisIo.Seek(_pos, io.SeekStart)
	if err != nil {
		return 0, err
	}
	return this.blocksRor1B, nil
}
func (this *ProcessRepeatUsertypeDynargRotate_BlocksBWrapper) BlocksRor2B() (v uint8, err error) {
	if (this._f_blocksRor2B) {
		return this.blocksRor2B, nil
	}
	this._f_blocksRor2B = true
	thisIo := this._parent.BlocksRor[2]._io
	_pos, err := thisIo.Pos()
	if err != nil {
		return 0, err
	}
	_, err = thisIo.Seek(int64(2), io.SeekStart)
	if err != nil {
		return 0, err
	}
	tmp14, err := thisIo.ReadU1()
	if err != nil {
		return 0, err
	}
	this.blocksRor2B = tmp14
	_, err = thisIo.Seek(_pos, io.SeekStart)
	if err != nil {
		return 0, err
	}
	return this.blocksRor2B, nil
}
