// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package test_formats

import "github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"

type UserType struct {
	One *UserType_Header
	_io *kaitai.Stream
	_root *UserType
	_parent kaitai.Struct
}
func NewUserType() *UserType {
	return &UserType{
	}
}

func (this UserType) IO_() *kaitai.Stream {
	return this._io
}

func (this *UserType) Read(io *kaitai.Stream, parent kaitai.Struct, root *UserType) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp1 := NewUserType_Header()
	err = tmp1.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.One = tmp1
	return err
}
type UserType_Header struct {
	Width uint32
	Height uint32
	_io *kaitai.Stream
	_root *UserType
	_parent *UserType
}
func NewUserType_Header() *UserType_Header {
	return &UserType_Header{
	}
}

func (this UserType_Header) IO_() *kaitai.Stream {
	return this._io
}

func (this *UserType_Header) Read(io *kaitai.Stream, parent *UserType, root *UserType) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp2, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.Width = uint32(tmp2)
	tmp3, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.Height = uint32(tmp3)
	return err
}
