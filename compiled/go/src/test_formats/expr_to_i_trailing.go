// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package test_formats

import (
	"github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"
	"strconv"
)

type ExprToITrailing struct {
	_io *kaitai.Stream
	_root *ExprToITrailing
	_parent interface{}
	_f_toIR10 bool
	toIR10 int
	_f_toIR13 bool
	toIR13 int
	_f_toIGarbage bool
	toIGarbage int
}
func NewExprToITrailing() *ExprToITrailing {
	return &ExprToITrailing{
	}
}

func (this *ExprToITrailing) Read(io *kaitai.Stream, parent interface{}, root *ExprToITrailing) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	return err
}
func (this *ExprToITrailing) ToIR10() (v int, err error) {
	if (this._f_toIR10) {
		return this.toIR10, nil
	}
	tmp1, err := strconv.ParseInt("9173abc", 10, 0)
	if err != nil {
		return 0, err
	}
	this.toIR10 = int(tmp1)
	this._f_toIR10 = true
	return this.toIR10, nil
}
func (this *ExprToITrailing) ToIR13() (v int, err error) {
	if (this._f_toIR13) {
		return this.toIR13, nil
	}
	tmp2, err := strconv.ParseInt("9173abc", 13, 0)
	if err != nil {
		return 0, err
	}
	this.toIR13 = int(tmp2)
	this._f_toIR13 = true
	return this.toIR13, nil
}
func (this *ExprToITrailing) ToIGarbage() (v int, err error) {
	if (this._f_toIGarbage) {
		return this.toIGarbage, nil
	}
	tmp3, err := strconv.ParseInt("123_.^", 10, 0)
	if err != nil {
		return 0, err
	}
	this.toIGarbage = int(tmp3)
	this._f_toIGarbage = true
	return this.toIGarbage, nil
}
