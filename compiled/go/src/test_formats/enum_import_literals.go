// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package test_formats

import "github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"

type EnumImportLiterals struct {
	_io *kaitai.Stream
	_root *EnumImportLiterals
	_parent kaitai.Struct
	_f_pet1Eq bool
	pet1Eq bool
	_f_pet1ToI bool
	pet1ToI int
	_f_pet2 bool
	pet2 EnumDeep_Container1_Container2_Animal
}
func NewEnumImportLiterals() *EnumImportLiterals {
	return &EnumImportLiterals{
	}
}

func (this EnumImportLiterals) IO_() *kaitai.Stream {
	return this._io
}

func (this *EnumImportLiterals) Read(io *kaitai.Stream, parent kaitai.Struct, root *EnumImportLiterals) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	return err
}
func (this *EnumImportLiterals) Pet1Eq() (v bool, err error) {
	if (this._f_pet1Eq) {
		return this.pet1Eq, nil
	}
	this._f_pet1Eq = true
	var tmp1 Enum0_Animal;
	if (true) {
		tmp1 = Enum0_Animal__Chicken
	} else {
		tmp1 = Enum0_Animal__Dog
	}
	this.pet1Eq = bool(tmp1 == Enum0_Animal__Chicken)
	return this.pet1Eq, nil
}
func (this *EnumImportLiterals) Pet1ToI() (v int, err error) {
	if (this._f_pet1ToI) {
		return this.pet1ToI, nil
	}
	this._f_pet1ToI = true
	this.pet1ToI = int(Enum0_Animal__Cat)
	return this.pet1ToI, nil
}
func (this *EnumImportLiterals) Pet2() (v EnumDeep_Container1_Container2_Animal, err error) {
	if (this._f_pet2) {
		return this.pet2, nil
	}
	this._f_pet2 = true
	this.pet2 = EnumDeep_Container1_Container2_Animal(EnumDeep_Container1_Container2_Animal__Hare)
	return this.pet2, nil
}
