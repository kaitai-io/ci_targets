// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package test_formats

import (
	"github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"
	"bytes"
)

type StrEosPadTermEqual struct {
	S1 *StrEosPadTermEqual_S1Type
	S2 *StrEosPadTermEqual_S2Type
	S3 *StrEosPadTermEqual_S3Type
	S4 *StrEosPadTermEqual_S4Type
	_io *kaitai.Stream
	_root *StrEosPadTermEqual
	_parent kaitai.Struct
	_raw_S1 []byte
	_raw_S2 []byte
	_raw_S3 []byte
	_raw_S4 []byte
}
func NewStrEosPadTermEqual() *StrEosPadTermEqual {
	return &StrEosPadTermEqual{
	}
}

func (this StrEosPadTermEqual) IO_() *kaitai.Stream {
	return this._io
}

func (this *StrEosPadTermEqual) Read(io *kaitai.Stream, parent kaitai.Struct, root *StrEosPadTermEqual) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp1, err := this._io.ReadBytes(int(20))
	if err != nil {
		return err
	}
	tmp1 = tmp1
	this._raw_S1 = tmp1
	_io__raw_S1 := kaitai.NewStream(bytes.NewReader(this._raw_S1))
	tmp2 := NewStrEosPadTermEqual_S1Type()
	err = tmp2.Read(_io__raw_S1, this, this._root)
	if err != nil {
		return err
	}
	this.S1 = tmp2
	tmp3, err := this._io.ReadBytes(int(20))
	if err != nil {
		return err
	}
	tmp3 = tmp3
	this._raw_S2 = tmp3
	_io__raw_S2 := kaitai.NewStream(bytes.NewReader(this._raw_S2))
	tmp4 := NewStrEosPadTermEqual_S2Type()
	err = tmp4.Read(_io__raw_S2, this, this._root)
	if err != nil {
		return err
	}
	this.S2 = tmp4
	tmp5, err := this._io.ReadBytes(int(20))
	if err != nil {
		return err
	}
	tmp5 = tmp5
	this._raw_S3 = tmp5
	_io__raw_S3 := kaitai.NewStream(bytes.NewReader(this._raw_S3))
	tmp6 := NewStrEosPadTermEqual_S3Type()
	err = tmp6.Read(_io__raw_S3, this, this._root)
	if err != nil {
		return err
	}
	this.S3 = tmp6
	tmp7, err := this._io.ReadBytes(int(20))
	if err != nil {
		return err
	}
	tmp7 = tmp7
	this._raw_S4 = tmp7
	_io__raw_S4 := kaitai.NewStream(bytes.NewReader(this._raw_S4))
	tmp8 := NewStrEosPadTermEqual_S4Type()
	err = tmp8.Read(_io__raw_S4, this, this._root)
	if err != nil {
		return err
	}
	this.S4 = tmp8
	return err
}
type StrEosPadTermEqual_S1Type struct {
	Value string
	_io *kaitai.Stream
	_root *StrEosPadTermEqual
	_parent *StrEosPadTermEqual
}
func NewStrEosPadTermEqual_S1Type() *StrEosPadTermEqual_S1Type {
	return &StrEosPadTermEqual_S1Type{
	}
}

func (this StrEosPadTermEqual_S1Type) IO_() *kaitai.Stream {
	return this._io
}

func (this *StrEosPadTermEqual_S1Type) Read(io *kaitai.Stream, parent *StrEosPadTermEqual, root *StrEosPadTermEqual) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp9, err := this._io.ReadBytesFull()
	if err != nil {
		return err
	}
	tmp9 = kaitai.BytesTerminate(kaitai.BytesStripRight(tmp9, 64), 64, false)
	this.Value = string(tmp9)
	return err
}
type StrEosPadTermEqual_S2Type struct {
	Value string
	_io *kaitai.Stream
	_root *StrEosPadTermEqual
	_parent *StrEosPadTermEqual
}
func NewStrEosPadTermEqual_S2Type() *StrEosPadTermEqual_S2Type {
	return &StrEosPadTermEqual_S2Type{
	}
}

func (this StrEosPadTermEqual_S2Type) IO_() *kaitai.Stream {
	return this._io
}

func (this *StrEosPadTermEqual_S2Type) Read(io *kaitai.Stream, parent *StrEosPadTermEqual, root *StrEosPadTermEqual) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp10, err := this._io.ReadBytesFull()
	if err != nil {
		return err
	}
	tmp10 = kaitai.BytesTerminate(kaitai.BytesStripRight(tmp10, 43), 64, true)
	this.Value = string(tmp10)
	return err
}
type StrEosPadTermEqual_S3Type struct {
	Value string
	_io *kaitai.Stream
	_root *StrEosPadTermEqual
	_parent *StrEosPadTermEqual
}
func NewStrEosPadTermEqual_S3Type() *StrEosPadTermEqual_S3Type {
	return &StrEosPadTermEqual_S3Type{
	}
}

func (this StrEosPadTermEqual_S3Type) IO_() *kaitai.Stream {
	return this._io
}

func (this *StrEosPadTermEqual_S3Type) Read(io *kaitai.Stream, parent *StrEosPadTermEqual, root *StrEosPadTermEqual) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp11, err := this._io.ReadBytesFull()
	if err != nil {
		return err
	}
	tmp11 = kaitai.BytesTerminate(kaitai.BytesStripRight(tmp11, 43), 43, false)
	this.Value = string(tmp11)
	return err
}
type StrEosPadTermEqual_S4Type struct {
	Value string
	_io *kaitai.Stream
	_root *StrEosPadTermEqual
	_parent *StrEosPadTermEqual
}
func NewStrEosPadTermEqual_S4Type() *StrEosPadTermEqual_S4Type {
	return &StrEosPadTermEqual_S4Type{
	}
}

func (this StrEosPadTermEqual_S4Type) IO_() *kaitai.Stream {
	return this._io
}

func (this *StrEosPadTermEqual_S4Type) Read(io *kaitai.Stream, parent *StrEosPadTermEqual, root *StrEosPadTermEqual) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp12, err := this._io.ReadBytesFull()
	if err != nil {
		return err
	}
	tmp12 = kaitai.BytesTerminate(kaitai.BytesStripRight(tmp12, 46), 46, true)
	this.Value = string(tmp12)
	return err
}
