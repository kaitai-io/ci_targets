// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package test_formats

import "github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"

type BitsSeqEndianCombo struct {
	Be1 uint64
	Be2 uint64
	Le3 uint64
	Be4 uint64
	Le5 uint64
	Le6 uint64
	Le7 uint64
	Be8 bool
	_io *kaitai.Stream
	_root *BitsSeqEndianCombo
	_parent kaitai.Struct
}
func NewBitsSeqEndianCombo() *BitsSeqEndianCombo {
	return &BitsSeqEndianCombo{
	}
}

func (this BitsSeqEndianCombo) IO_() *kaitai.Stream {
	return this._io
}

func (this *BitsSeqEndianCombo) Read(io *kaitai.Stream, parent kaitai.Struct, root *BitsSeqEndianCombo) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp1, err := this._io.ReadBitsIntBe(6)
	if err != nil {
		return err
	}
	this.Be1 = tmp1
	tmp2, err := this._io.ReadBitsIntBe(10)
	if err != nil {
		return err
	}
	this.Be2 = tmp2
	tmp3, err := this._io.ReadBitsIntLe(8)
	if err != nil {
		return err
	}
	this.Le3 = tmp3
	tmp4, err := this._io.ReadBitsIntBe(8)
	if err != nil {
		return err
	}
	this.Be4 = tmp4
	tmp5, err := this._io.ReadBitsIntLe(5)
	if err != nil {
		return err
	}
	this.Le5 = tmp5
	tmp6, err := this._io.ReadBitsIntLe(6)
	if err != nil {
		return err
	}
	this.Le6 = tmp6
	tmp7, err := this._io.ReadBitsIntLe(5)
	if err != nil {
		return err
	}
	this.Le7 = tmp7
	tmp8, err := this._io.ReadBitsIntBe(1)
	if err != nil {
		return err
	}
	this.Be8 = tmp8 != 0
	return err
}
