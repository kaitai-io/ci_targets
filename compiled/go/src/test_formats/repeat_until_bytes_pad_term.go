// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package test_formats

import (
	"github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"
	"bytes"
)

type RepeatUntilBytesPadTerm struct {
	Records [][]byte
	_io *kaitai.Stream
	_root *RepeatUntilBytesPadTerm
	_parent kaitai.Struct
}
func NewRepeatUntilBytesPadTerm() *RepeatUntilBytesPadTerm {
	return &RepeatUntilBytesPadTerm{
	}
}

func (this RepeatUntilBytesPadTerm) IO_() *kaitai.Stream {
	return this._io
}

func (this *RepeatUntilBytesPadTerm) Read(io *kaitai.Stream, parent kaitai.Struct, root *RepeatUntilBytesPadTerm) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	for i := 1;; i++ {
		tmp1, err := this._io.ReadBytes(int(5))
		if err != nil {
			return err
		}
		tmp1 = kaitai.BytesTerminate(kaitai.BytesStripRight(tmp1, 170), 85, true)
		_it := tmp1
		this.Records = append(this.Records, _it)
		if bytes.Equal(_it, []uint8{170, 85}) {
			break
		}
	}
	return err
}
