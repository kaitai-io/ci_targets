digraph {
	rankdir=LR;
	node [shape=plaintext];
	subgraph cluster__expr_bytes_cmp {
		label="ExprBytesCmp";
		graph[style=dotted];

		expr_bytes_cmp__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
			<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
			<TR><TD PORT="one_pos">0</TD><TD PORT="one_size">1</TD><TD></TD><TD PORT="one_type">one</TD></TR>
			<TR><TD PORT="two_pos">1</TD><TD PORT="two_size">3</TD><TD></TD><TD PORT="two_type">two</TD></TR>
		</TABLE>>];
		expr_bytes_cmp__inst__ack [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
			<TR><TD BGCOLOR="#E0FFE0">id</TD><TD BGCOLOR="#E0FFE0">value</TD></TR>
			<TR><TD>ack</TD><TD>[65, 67, 75].pack('C*')</TD></TR>
		</TABLE>>];
		expr_bytes_cmp__inst__ack2 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
			<TR><TD BGCOLOR="#E0FFE0">id</TD><TD BGCOLOR="#E0FFE0">value</TD></TR>
			<TR><TD>ack2</TD><TD>[65, 67, 75, 50].pack('C*')</TD></TR>
		</TABLE>>];
		expr_bytes_cmp__inst__hi_val [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
			<TR><TD BGCOLOR="#E0FFE0">id</TD><TD BGCOLOR="#E0FFE0">value</TD></TR>
			<TR><TD>hi_val</TD><TD>[144, 67].pack('C*')</TD></TR>
		</TABLE>>];
		expr_bytes_cmp__inst__is_eq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
			<TR><TD BGCOLOR="#E0FFE0">id</TD><TD BGCOLOR="#E0FFE0">value</TD></TR>
			<TR><TD>is_eq</TD><TD>two == ack</TD></TR>
		</TABLE>>];
		expr_bytes_cmp__inst__is_ge [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
			<TR><TD BGCOLOR="#E0FFE0">id</TD><TD BGCOLOR="#E0FFE0">value</TD></TR>
			<TR><TD>is_ge</TD><TD>two &gt;= ack2</TD></TR>
		</TABLE>>];
		expr_bytes_cmp__inst__is_gt [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
			<TR><TD BGCOLOR="#E0FFE0">id</TD><TD BGCOLOR="#E0FFE0">value</TD></TR>
			<TR><TD>is_gt</TD><TD>two &gt; ack2</TD></TR>
		</TABLE>>];
		expr_bytes_cmp__inst__is_gt2 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
			<TR><TD BGCOLOR="#E0FFE0">id</TD><TD BGCOLOR="#E0FFE0">value</TD></TR>
			<TR><TD>is_gt2</TD><TD>hi_val &gt; two</TD></TR>
		</TABLE>>];
		expr_bytes_cmp__inst__is_le [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
			<TR><TD BGCOLOR="#E0FFE0">id</TD><TD BGCOLOR="#E0FFE0">value</TD></TR>
			<TR><TD>is_le</TD><TD>two &lt;= ack2</TD></TR>
		</TABLE>>];
		expr_bytes_cmp__inst__is_lt [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
			<TR><TD BGCOLOR="#E0FFE0">id</TD><TD BGCOLOR="#E0FFE0">value</TD></TR>
			<TR><TD>is_lt</TD><TD>two &lt; ack2</TD></TR>
		</TABLE>>];
		expr_bytes_cmp__inst__is_lt2 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
			<TR><TD BGCOLOR="#E0FFE0">id</TD><TD BGCOLOR="#E0FFE0">value</TD></TR>
			<TR><TD>is_lt2</TD><TD>one &lt; two</TD></TR>
		</TABLE>>];
		expr_bytes_cmp__inst__is_ne [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
			<TR><TD BGCOLOR="#E0FFE0">id</TD><TD BGCOLOR="#E0FFE0">value</TD></TR>
			<TR><TD>is_ne</TD><TD>two != ack</TD></TR>
		</TABLE>>];
	}
	expr_bytes_cmp__seq:two_type -> expr_bytes_cmp__inst__is_eq [color="#404040"];
	expr_bytes_cmp__inst__ack:ack_type -> expr_bytes_cmp__inst__is_eq [color="#404040"];
	expr_bytes_cmp__seq:two_type -> expr_bytes_cmp__inst__is_ge [color="#404040"];
	expr_bytes_cmp__inst__ack2:ack2_type -> expr_bytes_cmp__inst__is_ge [color="#404040"];
	expr_bytes_cmp__seq:two_type -> expr_bytes_cmp__inst__is_gt [color="#404040"];
	expr_bytes_cmp__inst__ack2:ack2_type -> expr_bytes_cmp__inst__is_gt [color="#404040"];
	expr_bytes_cmp__inst__hi_val:hi_val_type -> expr_bytes_cmp__inst__is_gt2 [color="#404040"];
	expr_bytes_cmp__seq:two_type -> expr_bytes_cmp__inst__is_gt2 [color="#404040"];
	expr_bytes_cmp__seq:two_type -> expr_bytes_cmp__inst__is_le [color="#404040"];
	expr_bytes_cmp__inst__ack2:ack2_type -> expr_bytes_cmp__inst__is_le [color="#404040"];
	expr_bytes_cmp__seq:two_type -> expr_bytes_cmp__inst__is_lt [color="#404040"];
	expr_bytes_cmp__inst__ack2:ack2_type -> expr_bytes_cmp__inst__is_lt [color="#404040"];
	expr_bytes_cmp__seq:one_type -> expr_bytes_cmp__inst__is_lt2 [color="#404040"];
	expr_bytes_cmp__seq:two_type -> expr_bytes_cmp__inst__is_lt2 [color="#404040"];
	expr_bytes_cmp__seq:two_type -> expr_bytes_cmp__inst__is_ne [color="#404040"];
	expr_bytes_cmp__inst__ack:ack_type -> expr_bytes_cmp__inst__is_ne [color="#404040"];
}
