digraph {
	rankdir=LR;
	node [shape=plaintext];
	subgraph cluster__switch_manual_int_size_else {
		label="SwitchManualIntSizeElse";
		graph[style=dotted];

		switch_manual_int_size_else__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
			<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
			<TR><TD PORT="chunks_pos">0</TD><TD PORT="chunks_size">...</TD><TD>Chunk</TD><TD PORT="chunks_type">chunks</TD></TR>
			<TR><TD COLSPAN="4" PORT="chunks__repeat">repeat to end of stream</TD></TR>
		</TABLE>>];
		subgraph cluster__chunk {
			label="SwitchManualIntSizeElse::Chunk";
			graph[style=dotted];

			chunk__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
				<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
				<TR><TD PORT="code_pos">0</TD><TD PORT="code_size">1</TD><TD>u1</TD><TD PORT="code_type">code</TD></TR>
				<TR><TD PORT="size_pos">1</TD><TD PORT="size_size">4</TD><TD>u4le</TD><TD PORT="size_type">size</TD></TR>
				<TR><TD PORT="body_pos">5</TD><TD PORT="body_size">...</TD><TD>switch (code)</TD><TD PORT="body_type">body</TD></TR>
			</TABLE>>];
chunk__seq_body_switch [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<TR><TD BGCOLOR="#F0F2E4">case</TD><TD BGCOLOR="#F0F2E4">type</TD></TR>
	<TR><TD>17</TD><TD PORT="case0">ChunkMeta</TD></TR>
	<TR><TD>34</TD><TD PORT="case1">ChunkDir</TD></TR>
	<TR><TD>_</TD><TD PORT="case2">Dummy</TD></TR>
</TABLE>>];
			subgraph cluster__chunk_dir {
				label="SwitchManualIntSizeElse::Chunk::ChunkDir";
				graph[style=dotted];

				chunk_dir__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
					<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
					<TR><TD PORT="entries_pos">0</TD><TD PORT="entries_size">4</TD><TD>str(UTF-8)</TD><TD PORT="entries_type">entries</TD></TR>
					<TR><TD COLSPAN="4" PORT="entries__repeat">repeat to end of stream</TD></TR>
				</TABLE>>];
			}
			subgraph cluster__chunk_meta {
				label="SwitchManualIntSizeElse::Chunk::ChunkMeta";
				graph[style=dotted];

				chunk_meta__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
					<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
					<TR><TD PORT="title_pos">0</TD><TD PORT="title_size">...</TD><TD>str(term=0, UTF-8)</TD><TD PORT="title_type">title</TD></TR>
					<TR><TD PORT="author_pos">...</TD><TD PORT="author_size">...</TD><TD>str(term=0, UTF-8)</TD><TD PORT="author_type">author</TD></TR>
				</TABLE>>];
			}
			subgraph cluster__dummy {
				label="SwitchManualIntSizeElse::Chunk::Dummy";
				graph[style=dotted];

				dummy__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
					<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
					<TR><TD PORT="rest_pos">0</TD><TD PORT="rest_size">â‡²</TD><TD></TD><TD PORT="rest_type">rest</TD></TR>
				</TABLE>>];
			}
		}
	}
	switch_manual_int_size_else__seq:chunks_type -> chunk__seq [style=bold];
	chunk__seq:body_type -> chunk__seq_body_switch [style=bold];
	chunk__seq_body_switch:case0 -> chunk_meta__seq [style=bold];
	chunk__seq_body_switch:case1 -> chunk_dir__seq [style=bold];
	chunk__seq_body_switch:case2 -> dummy__seq [style=bold];
	chunk__seq:code_type -> chunk__seq:body_type [color="#404040"];
}
