digraph {
	rankdir=LR;
	node [shape=plaintext];
	subgraph cluster__switch_multi_bool_ops {
		label="SwitchMultiBoolOps";
		graph[style=dotted];

		switch_multi_bool_ops__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
			<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
			<TR><TD PORT="opcodes_pos">0</TD><TD PORT="opcodes_size">...</TD><TD>Opcode</TD><TD PORT="opcodes_type">opcodes</TD></TR>
			<TR><TD COLSPAN="4" PORT="opcodes__repeat">repeat to end of stream</TD></TR>
		</TABLE>>];
		subgraph cluster__opcode {
			label="SwitchMultiBoolOps::Opcode";
			graph[style=dotted];

			opcode__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
				<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
				<TR><TD PORT="code_pos">0</TD><TD PORT="code_size">1</TD><TD>u1</TD><TD PORT="code_type">code</TD></TR>
				<TR><TD PORT="body_pos">1</TD><TD PORT="body_size">...</TD><TD>switch (( ((code &gt; 0) &amp;&amp; (code &lt;= 8) &amp;&amp; ((code != 10 ? true : false)))  ? code : 0))</TD><TD PORT="body_type">body</TD></TR>
			</TABLE>>];
opcode__seq_body_switch [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<TR><TD BGCOLOR="#F0F2E4">case</TD><TD BGCOLOR="#F0F2E4">type</TD></TR>
</TABLE>>];
		}
	}
	switch_multi_bool_ops__seq:opcodes_type -> opcode__seq [style=bold];
	opcode__seq:body_type -> opcode__seq_body_switch [style=bold];
	opcode__seq:code_type -> opcode__seq:body_type [color="#404040"];
}
