#!/bin/sh

. ./config

git clone --depth 1 https://github.com/kaitai-io/kaitai_struct_cpp_stl_runtime "$CPP_STL_RUNTIME_DIR"
git -C "$CPP_STL_RUNTIME_DIR" rev-parse HEAD

# On AppVeyor/Windows, pull some prereq libraries
if [ -n "$APPVEYOR" ]; then
	vcpkg install boost-test:$ARCH-windows zlib:$ARCH-windows libiconv:$ARCH-windows
fi

# On GitHub Actions for macOS, install prereqs from brew
if [ -n "$GITHUB_ACTIONS" ] && [ "$RUNNER_OS" = macOS ]; then
	# NB: since commit
	# https://github.com/Homebrew/homebrew-core/commit/c67b591208748bb8d07e79806c4963bbe1a9c866 made
	# on 2024-04-26, we can no longer use just `brew install boost`
	# (https://formulae.brew.sh/formula/boost), because it got updated to Boost 1.85, which then
	# broke our `cpp_stl_98/clang14-macos-x86_64` CI job. Apparently, Boost 1.85 apparently no
	# longer builds with `-std=c++98`, since we were suddenly getting syntax errors in
	# `/usr/local/include/boost/bind/mem_fn.hpp`. This matches the
	# [changelog](https://www.boost.org/users/history/version_1_85_0.html):
	# > Bind:
	# > * C++03 is no longer supported; a C++11 compiler is required. (This includes GCC 4.7 or
	# >   later, and MSVC 12.0 (VS 2013) or later.)
	#
	# Fortunately, https://formulae.brew.sh/formula/boost@1.76 is available, so we use that.
	brew install \
		boost@1.76 \
		make

	# Following the advice of `brew install boost@1.76`:
	# ```
	# ==> Caveats
	# boost@1.76 is keg-only, which means it was not symlinked into /usr/local,
	# because this is an alternate version of another formula.
	# For compilers to find boost@1.76 you may need to set:
	#   export LDFLAGS="-L/usr/local/opt/boost@1.76/lib"
	#   export CPPFLAGS="-I/usr/local/opt/boost@1.76/include"
	# ```
	boost_prefix=$(brew --prefix boost@1.76)
	echo LDFLAGS="-L${boost_prefix}/lib" >> "$GITHUB_ENV"
	echo CPPFLAGS="-I${boost_prefix}/include" >> "$GITHUB_ENV"
	# the `BOOST_ROOT` environment variable is required for CMake to find Boost
	echo BOOST_ROOT="${boost_prefix}" >> "$GITHUB_ENV"
fi
